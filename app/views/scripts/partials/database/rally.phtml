<?php

$dates = '';
$dates .= $this->escape($this->df);
if(isset($this->dt)) {
$dates .= ' - '.$this->escape($this->dt);
}
$this->headMeta('This page gives full details for metal detecting rally held at '
        . $this->escape($this->rally_name).' between ' . $dates,'description')
->headMeta($this->curUrl(),'dc.identifier')
->headMeta($this->namethem($this->escape($this->fullname)),'dc.creator')
->headMeta($this->updated, 'updated')
->headMeta('The Portable Antiquities Scheme','dc.publisher')
->headMeta('CC NC-SA-BY','dc.rights')
->headMeta('metal detecting rallies','dc.subject')
;
$this->headTitle($this->rally_name);
?>

<h2><?php echo $this->title();?></h2>

<?php
$config = Zend_Controller_Front::getInstance()->getParam('bootstrap');
$allowed = $config->getOption('higherLevel');
echo $this->Href(array(
    'module' => 'database',
    'controller'=>'rallies',
    'action'=>'edit',
    'checkAcl'=>true,
    'acl'=>'Zend_Acl',
    'params' =>array('id' => $this->id),
    'content'=>'Edit',
    'attribs' => array(
        'title' => 'Edit rally details',
		'class' => 'btn btn-small btn-warning')
    ));
?>

<?php
echo $this->Href(array(
    'module' => 'database',
    'controller'=>'rallies',
    'action'=>'delete',
    'checkAcl'=>true,
    'acl'=>'Zend_Acl',
    'params' =>array('id'=>$this->id),
    'content'=>'Delete',
    'attribs' => array(
        'title' => 'Delete rally details',
		'class' => 'btn btn-small btn-danger')
    ));
?>
<?php
$auth = Zend_Auth::getInstance();
if($auth->hasIdentity())
{
$user = $auth->getIdentity();
{
if(in_array($user->role,$allowed)){?>
<?php
if(!is_null($this->gridref)) : ?>
<?php
$this->googleDynamicMap(null,null,true);
$this->jQuery()->javascriptCaptureStart();
?>
$(document).ready(function() {
<?php
	$user = new Pas_User_Details();
	$person = $user->getPerson();
	if($person){
		$role = $person->role;
	} else {
		$role = NULL;
	}
	$allowed = array('admin', 'fa', 'flos', 'research', 'treasure', 'hero');
	if(in_array($role, $allowed)) {
		$maxzoom = 18;
		$minzoom = 1;
	} else {
		$maxzoom = 11;
		$minzoom = 1;
	}
?>

	var max = <?php echo $maxzoom;?>;
	var min = <?php echo $minzoom;?>;
	
	var imperium = new google.maps.ImageMapType({
        getTileUrl: function (coord, zoom) {
            return "http://finds.org.uk/imperium/" +
                zoom + "/" + coord.x + "/" + coord.y + ".png";

        },
        tileSize: new google.maps.Size(256, 256),
        isPng: true,
        alt: "Imperium layer",
        name: "Imperium",
        maxZoom: 11,
		minZoom:3
    });
	
	var osmMapType = new google.maps.ImageMapType({
        getTileUrl: function (coord, zoom) {
            return "http://tile.openstreetmap.org/" +
                zoom + "/" + coord.x + "/" + coord.y + ".png";

        },
        tileSize: new google.maps.Size(256, 256),
        isPng: true,
        alt: "OpenStreetMap layer",
        name: "OSM",
        maxZoom: max
    });
    
	var myOptions = {
          center: new google.maps.LatLng(<?php echo $this->latitude;?>, <?php echo $this->longitude;?>),
          zoom: 12,
		  mapTypeControlOptions: {
          mapTypeIds: [
          google.maps.MapTypeId.ROADMAP, 
          google.maps.MapTypeId.HYBRID,
          google.maps.MapTypeId.TERRAIN,
          google.maps.MapTypeId.SATELLITE,
          'OSM',
          'Imperium',
          ]
    	  },
    	  mapTypeControl: true,
    	  style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
          scaleControl: true,
    	  zoomControl: true,
          mapTypeId: 'OSM',
          scrollwheel: false,
        };
        var map = new google.maps.Map(document.getElementById("map"),
            myOptions);
            map.mapTypes.set('OSM',osmMapType); 
        	map.mapTypes.set('Imperium',imperium);
            map.setTilt(45);
        var marker = new google.maps.Marker({
      		position: new google.maps.LatLng(<?php echo $this->latitude;?>, <?php echo $this->longitude;?>),
      		map: map,
      		animation: google.maps.Animation.DROP,
      		title:"Findspot location",
      		icon: "<?php echo $this->serverUrl();?>/images/logos/museum_archeological.png" 
  		});
  		
  		var myTitle = document.createElement('h1');
		myTitle.style.color = '#444444';
		myTitle.style.font = "10px sans-serif";
		myTitle.innerHTML = 'Imperium layer from the <a href="http://pelagios-project.blogspot.co.uk/2012/09/a-digital-map-of-roman-empire.html">Pelagios project<\/a> <a href="http://creativecommons.org/licenses/by/3.0/">CC-BY<\/a> | Historical maps from <a href="http://geo.nls.uk/maps/api/">NLS Maps API<\/a> | OSM &copy; <a href="http://www.openstreetmap.org/">OpenStreetMap<\/a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA<\/a>';

		var myTextDiv = document.createElement('div');
		myTextDiv.appendChild(myTitle);

		map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(myTextDiv);
  		
  		var region = new google.maps.KmlLayer('<?php echo $this->serverUrl();?>/kml/regions/<?php echo strtoupper(str_replace(' ','',$this->region));?>.kmz',
                                                 {preserveViewport: true, suppressInfoWindows: false });
		region.setMap(map);
  		
  		var parish = new google.maps.KmlLayer('<?php echo $this->serverUrl();?>/kml/parishes/<?php echo strtoupper(str_replace(array(' ', ')','(','\'\''),'',$this->parish));?>.kmz',
                                                 {preserveViewport: true, suppressInfoWindows: false });
		parish.setMap(map);
		
		var county = new google.maps.KmlLayer('<?php echo $this->serverUrl();?>/kml/counties/<?php echo strtoupper(str_replace(' ','',$this->county));?>.kmz',
                                                 {preserveViewport: true, suppressInfoWindows: false });
		county.setMap(map);
		
		var district = new google.maps.KmlLayer('<?php echo $this->serverUrl();?>/kml/districts/<?php echo strtoupper(str_replace(' ','',$this->district));?>.kmz',
                                                 {preserveViewport: true, suppressInfoWindows: false });
		district.setMap(map);

<?php 
	$bbox = new Pas_Geo_BoundBox();
	$d = 5;  // distance
    $path_top_right = $bbox->createPoint($this->latitude ,  $this->longitude, 45, $d);
    $path_bottom_right = $bbox->createPoint($this->latitude ,  $this->longitude, 135, $d);
    $path_bottom_left = $bbox->createPoint($this->latitude ,  $this->longitude, 225, $d);
    $path_top_left = $bbox->createPoint($this->latitude,  $this->longitude, 315, $d);
?>
  		
  		 var latLngBounds = new google.maps.LatLngBounds(
          new google.maps.LatLng(<?php echo $path_bottom_left;?>),
          new google.maps.LatLng(<?php echo $path_top_right;?>)
        );
    	map.fitBounds(latLngBounds);
  		google.maps.event.addListener(marker, 'click', toggleBounce);
	
	function toggleBounce() {
		if (marker.getAnimation() != null) {
    		marker.setAnimation(null);
  		} else {
    		marker.setAnimation(google.maps.Animation.BOUNCE);
  		}
  		}
});
<?php $this->jQuery()->javascriptCaptureEnd() ?>

<div id="map">
</div>


<?php endif;
}}}?>


<p>Start date: <?php echo $this->escape($this->df);?><br />
<?php if(!is_null($this->dt)) {?>
End date: <?php echo $this->escape($this->dt);?>
<?php } ?>
<?php
$auth = Zend_Auth::getInstance();
if($auth->hasIdentity()){
$user = $auth->getIdentity();
{
if(in_array($user->role, $allowed))
{?>
<br />
<?php if(!is_null($this->organiser)):?>
Organised by: <?php echo $this->organiser;?>
<?php endif;?>
</p>
<?php  if(!is_null($this->comments)):?>
<p>Comments: <?php echo $this->comments;?></p>
<?php endif;?>
<?php  if(!is_null($this->record_method)):?>
<p>Recording methodology: <?php echo $this->record_method;?></p>
<?php endif;?>
<?php
}}}?>
<?php
$auth = Zend_Auth::getInstance();
if($auth->hasIdentity()){
$user = $auth->getIdentity();
{
if(in_array($user->role, $allowed))
{?>
<p>Rally centred on National Grid Reference: <?php echo $this->escape($this->gridref);?><br />
Four figure grid ref for publication: <?php echo $this->fourFigure;?><br />
Latitude: <?php echo $this->latitude;?><br />
Longitude: <?php echo $this->longitude;?><br />
Easting: <?php echo $this->easting;?><br />
Northing: <?php echo $this->northing;?><br />
1:25k map sheet: <?php echo $this->map25k;?><br />
1:10k map sheet: <?php echo $this->map10k;?><br />
</p>
<p>Parish: <?php echo $this->escape($this->parish);?><br />
District: <?php echo $this->escape($this->district);?>
<?php
}}}?><br />
County: <?php echo $this->escape($this->county);?></p>

<p>
<?php if(!is_null($this->fullname)):?>
Created by: <?php echo $this->namethem($this->escape($this->fullname));?><br />
<?php endif;?>
<?php if(!is_null($this->created)):?>
Created on: <?php echo $this->escape($this->timeagoinwords($this->created));?><br />
<?php endif;?>
<?php if(!is_null($this->fn)):?>
Updated: <?php echo $this->namethem($this->escape($this->fn));?><br />
<?php endif;?>
<?php if(!is_null($this->updated)):?>
Updated on: <?php echo $this->escape($this->timeagoinwords($this->updated));?>
<?php endif;?>
</p>
<?php if($this->finds) :?>
<p>View <a href="<?php echo $this->url(array(
    'module' => 'database',
    'controller' => 'search',
    'action' => 'results',
    'rally' => 1,
    'rallyID' => $this->id),
    null,true);?>" title="Search database for all records from <?php echo $this->rally_name;?>">all
    <?php echo $this->finds;?> records</a> from this rally.</p>
<?php else:?>
<p>No records of any artefacts have been entered yet on the database.</p>
<?php endif;?>