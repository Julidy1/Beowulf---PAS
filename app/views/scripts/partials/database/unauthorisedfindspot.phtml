<?php $module = Zend_Controller_Front::getInstance()->getRequest()->getModuleName();
$config = Zend_Registry::get('config');
?>

<h4>Spatial data</h4>
<?php if(!is_null($this->gridref) && is_null($this->knownas)) : ?>
<?php
$this->googleDynamicMap(null,null,true);
?>
<div id="map">
<noscript><img src="http://maps.google.com/maps/api/staticmap?center=<?php echo $this->declat;?>,<?php echo $this->declong;?>&amp;zoom=6&amp;size=640x300&amp;maptype=terrain&amp;markers=color:green|label:G|<?php echo $this->declat;?>,<?php echo $this->declong;?>&amp;sensor=false" alt="Findspot map generated via google static maps" /></noscript>
</div>


<?php endif;?>

<p>
<?php if(!is_null($this->region)) :?>
Region: <?php echo $this->escape(ucwords(strtolower($this->region)));?><br />
<?php endif;?>
<?php if(!is_null($this->county)) :?>
County: <?php echo $this->escape(ucwords(strtolower($this->county)));?><br />
<?php endif;?>
<?php if(!is_null($this->district)) :?>
District: <?php echo $this->escape(ucwords(strtolower($this->district)));?><br />
<?php endif;?>
<?php if(!is_null($this->knownas)) :?>
<span class="knownas">To be known as: <?php echo $this->escape($this->knownas);?></span>
<?php endif;?>

<?php
if(!is_null($this->parish) && (empty($this->knownas)))
{
$this->headMeta(substr($this->declat,0,4).';' .substr($this->declong,0,4),'geo.position');
$this->headMeta($this->parish.','.$this->county, 'geo.placename');

echo 'Parish: '. ucwords(strtolower($this->parish)).'<br />';


	$pm = new Pas_Service_Geo_Placemaker($config->webservice->ydnkeys->appid);
	$place = $pm->getSingle($this->parish.','.$this->county.' United Kingdom');
	if(!is_null($place)){
	echo 'Settlement type: '.$place->type.'<br />';
	if(isset($place->postal)) {
	echo 'Postcode: '.$place->postal.'<br />';
	}
	echo 'WOEID: '.$place->woeid.'<br />';
	echo 'Some of the spatially enriched data provided here was sourced from the excellent Places/Placemaker service from Yahoo\'s geo team.';
}
}
?>
</p>
<?php
if(!is_null($this->knownas)){
$pm = new Pas_Service_Geo_Placemaker($config->webservice->ydnkeys->appid);
$place = $pm->getSingle($this->parish.','.$this->county.' United Kingdom');
if(!is_null($place)){
echo $this->YahooGeoAdjacent($place->woeid);
}
}
?>
<?php
if(is_null($this->knownas) && !is_null($this->declat)){
$this->inlineScript()->captureStart();?>
$(document).ready(function() {

if (GBrowserIsCompatible()) {

<?php
$pm = new Pas_Service_Geo_Placemaker($config->webservice->ydnkeys->appid);
	$place = $pm->getSingle($this->parish.' , '.$this->county.' , United Kingdom');
	if(!is_null($place)){
	$woeid = $place->woeid;
	} else {
		$woeid = NULL;
	}
if(!is_null($woeid)):?>
 var locations = {};
	var flickr_api_key = 'dbb87ca6390925131a4fedb34d9d8d80';
	var yahoo_geoplanet_api_key = 'avT7WEDV34HLQLsINzdyv9D4QFGiJtNnPHgtE7C0dvVe7ItxzfuOkGTslkfR_iI9cUCVFKJsrzYTYQ--';
	var bounds = new GLatLngBounds();
	var woeid = '<?php echo $woeid;?>';
	var colours = ["red", "blue", "green", "purple", "orange", "yellow", "darkred", "darkblue", "darkgreen", "aqua", "magenta", "springgreen"];

	function displayPolygon(woeid) {
		$.getJSON('http://api.flickr.com/services/rest/?method=flickr.places.getInfo&api_key=' + flickr_api_key + '&woe_id=' + woeid + '&format=json&jsoncallback=?', function(data) {
			if(data.place.has_shapedata == 1) {

				$.each(data.place.shapedata.polylines.polyline, function(index,polyline) {
					thepoints = [];
					$.each(polyline._content.split(/ /), function(pindex, point) {
						lat = parseFloat(point.split(/,/)[0]);
						lng = parseFloat(point.split(/,/)[1]);
						thepoints[pindex] = new GLatLng(lat, lng);
					});

					var polyOptions = {geodesic:true};
					var colour = colours.shift();
					var name = data.place.name.split(',')[0];

					var polygon = new GPolygon(thepoints, colour, 2, 1, colour, 0.1, polyOptions);
					map.addOverlay(polygon);
					//$('ul#legend-items').append('<li style="color:' + colour + '"><a href="/database/search/results/woeid/' + woeid + '" title="View all data from adjacent places">' + name + '</a></li>');

					$.each(thepoints, function(pindex, point) {
						bounds.extend(point);
					});
				});

				if(!bounds.isEmpty()) {
					map.setCenter(bounds.getCenter(), map.getBoundsZoomLevel(bounds));
				}
			}
		});
	};



	//displayPolygon(woeid);
 <?php endif;?>

 // -- copy&paste block start
var copyright = new GCopyright(1, new GLatLngBounds(new GLatLng(-90, -180),new GLatLng(90, 180)), 1,
	"Historical maps from <a href='http://geo.nls.uk/maps/api/'>NLS Maps API<\/a>");
var copyrightCollection = new GCopyrightCollection();
copyrightCollection.addCopyright(copyright);
var tilelayer = new GTileLayer(copyrightCollection, 1, NLSTileUrlOS('MAXZOOM'));
tilelayer.getTileUrl = NLSTileUrlOS;
var nlsmap = new GMapType([tilelayer], G_NORMAL_MAP.getProjection(), "Historical");
// -- copy&paste block end


  	 var copyOSM = new GCopyrightCollection('<a href="http://www.openstreetmap.org/">OpenStreetMap</a>');
  copyOSM.addCopyright(new GCopyright(1,
    new GLatLngBounds(new GLatLng(-90, -180), new GLatLng(90, 180)),
    0, // minimum zoom level
    ' ' // no additional copyright message, but empty string hides entire copyright
  ));

	var osmLayer = new GTileLayer(copyOSM, 0, 18, {
		tileUrlTemplate: 'http://b.tile.cloudmade.com/758908c8a49c53628f805e18f661d500/5/256/{Z}/{X}/{Y}.png',
		isPng: true,
		opacity: 1.0
		});

	var osmMap = new GMapType(
		[osmLayer], // list of layers
		G_NORMAL_MAP.getProjection(), // borrow the Mercator projection from the standard map
		'OSM' // name should be short enough to fit in button
	  );

	var map = new GMap2(document.getElementById("map"));
		map.addControl(new GLargeMapControl());
      	map.addControl(new GMapTypeControl());
        map.setCenter(new GLatLng(<?php echo $this->declat.',',$this->declong;?>),8);
		map.addMapType(osmMap);
		map.addMapType(nlsmap);
	    map.addMapType(G_PHYSICAL_MAP);
		map.setMapType(G_PHYSICAL_MAP);

	var mt = map.getMapTypes();for (var i=0; i < mt.length; i++) {
        mt[i].getMinimumResolution = function() {return 2;}
        mt[i].getMaximumResolution = function() {return 11;}
      }

    }

});
<?php $this->inlineScript()->captureEnd();
}
 ?>




<?php if(($this->knownas == NULL) && ($this->declat == NULL) && (isset($this->parish)) && (isset($this->county)))  {
	$pm = new Pas_Placemaker();
	$place = $pm->get($this->parish.' , '.$this->county.' , United Kingdom');
	if(!is_null($place)){
	echo $this->GridRef($place->latitude,$place->longitude).'<br />';
	}
	?>

<?php
echo $this->googleDynamicMap(null,null,true);
?>

<?php $this->inlineScript()->captureStart();?>
$(document).ready(function() {

if (GBrowserIsCompatible()) {
<?php $pm = new Placemaker();
	$place = $pm->get($this->parish.' , '.$this->county.' , United Kingdom');

	$woeid = $place->woeid;
if(!is_null($woeid)):?>
 var locations = {};
	var flickr_api_key = 'dbb87ca6390925131a4fedb34d9d8d80';
	var yahoo_geoplanet_api_key = 'avT7WEDV34HLQLsINzdyv9D4QFGiJtNnPHgtE7C0dvVe7ItxzfuOkGTslkfR_iI9cUCVFKJsrzYTYQ--';
	var bounds = new GLatLngBounds();
	var woeid = '<?php echo $place->woeid;?>';
	var colours = ["red", "blue", "green", "purple", "orange", "yellow", "darkred", "darkblue", "darkgreen", "aqua", "magenta", "springgreen"];

	function displayPolygon(woeid) {
		$.getJSON('http://api.flickr.com/services/rest/?method=flickr.places.getInfo&api_key=' + flickr_api_key + '&woe_id=' + woeid + '&format=json&jsoncallback=?', function(data) {
			if(data.place.has_shapedata == 1) {

				$.each(data.place.shapedata.polylines.polyline, function(index,polyline) {
					thepoints = [];
					$.each(polyline._content.split(/ /), function(pindex, point) {
						lat = parseFloat(point.split(/,/)[0]);
						lng = parseFloat(point.split(/,/)[1]);
						thepoints[pindex] = new GLatLng(lat, lng);
					});

					var polyOptions = {geodesic:true};
					var colour = colours.shift();
					var name = data.place.name.split(',')[0];

					var polygon = new GPolygon(thepoints, colour, 2, 1, colour, 0.1, polyOptions);
					map.addOverlay(polygon);
				//	$('ul#legend-items').append('<li style="color:' + colour + '"><a href="/database/search/results/woeid/' + woeid + '" title="View all data from adjacent places">' + name + '</a></li>');

					$.each(thepoints, function(pindex, point) {
						bounds.extend(point);
					});
				});

				if(!bounds.isEmpty()) {
					map.setCenter(bounds.getCenter(), map.getBoundsZoomLevel(bounds));
				}
			}
		});
	};



	//displayPolygon(woeid);
 <?php endif;?>

		 // -- copy&paste block start
var copyright = new GCopyright(1, new GLatLngBounds(new GLatLng(-90, -180),new GLatLng(90, 180)), 1,
	"Historical maps from <a href='http://geo.nls.uk/maps/api/'>NLS Maps API<\/a>");
var copyrightCollection = new GCopyrightCollection();
copyrightCollection.addCopyright(copyright);
var tilelayer = new GTileLayer(copyrightCollection, 1, NLSTileUrlOS('MAXZOOM'));
tilelayer.getTileUrl = NLSTileUrlOS;
var nlsmap = new GMapType([tilelayer], G_NORMAL_MAP.getProjection(), "Historical");
// -- copy&paste block end

  	 var copyOSM = new GCopyrightCollection('<a href="http://www.openstreetmap.org/">OpenStreetMap</a>');
  copyOSM.addCopyright(new GCopyright(1,
    new GLatLngBounds(new GLatLng(-90, -180), new GLatLng(90, 180)),
    0, // minimum zoom level
    ' ' // no additional copyright message, but empty string hides entire copyright
  ));

	var osmLayer = new GTileLayer(copyOSM, 0, 18, {
		tileUrlTemplate: 'http://b.tile.cloudmade.com/758908c8a49c53628f805e18f661d500/998/256/{Z}/{X}/{Y}.png',
		isPng: true,
		opacity: 1.0
		});

	var osmMap = new GMapType(
		[osmLayer], // list of layers
		G_NORMAL_MAP.getProjection(), // borrow the Mercator projection from the standard map
		'OSM' // name should be short enough to fit in button
	  );

	var map = new GMap2(document.getElementById("map"));
		map.addControl(new GLargeMapControl());
      	map.addControl(new GMapTypeControl());
        map.setCenter(new GLatLng(<?php echo $place->latitude.','.$place->longitude;?>),9);
		map.addMapType(osmMap);
		map.addMapType(nlsmap);
	    map.addMapType(G_PHYSICAL_MAP);
		map.setMapType(G_PHYSICAL_MAP);
		var mt = map.getMapTypes();
		for (var i=0; i < mt.length; i++) {
        mt[i].getMinimumResolution = function() {return 2;}
        mt[i].getMaximumResolution = function() {return 11;}
      }

    }

});
<?php $this->inlineScript()->captureEnd();
}?>
<?php
if((!is_null($this->gridref)) && (empty($this->knownas))):?>
<p>Restricted 4 Figure grid reference: <span class="fourfigure"><?php echo $this->fourFigure;?></span><br />
The map has been degraded and provides an approximate location with a degree of random obfuscation.<br />
Grid reference source: <span property="pas:gridReferenceSource"><?php echo $this->escape($this->source);?></span><br />
Grid reference accurate to a <span property="pas:gridReferenceAccuracy"><?php echo $this->GetAccuracy($this->gridref);?></span> metre square.</p>
<?php endif; ?>

<p>
<?php if(!is_null($this->method)) :?>
Method of discovery: <span property="pas:methodOfDiscovery"><?php echo $this->escape($this->method);?></span>
 <span class="scope">[<a href="<?php echo $this->url(array('module' => $module,'controller'=>'terminology',
'action'=>'method','id' => $this->discmethod),null,true);?>"
 title="Read scope note for <?php echo $this->method;?>">scope notes</a>]</span><br />
<?php endif;?>

<?php if(!is_null($this->disccircum)):?>
Discovery circumstances: <span property="pas:discoveryCircumstances"><?php echo $this->escape($this->disccircum);?></span><br />
<?php endif;?>

<?php if(!is_null($this->curr_loc)):?>
Current location: <span property="pas:currentLocation"><?php echo $this->escape($this->curr_loc);?></span><br />
<?php endif;?>

<?php if(!is_null($this->landvalue)):?>
General landuse: <span property="pas:generalLanduse"><?php echo $this->landvalue;?></span> <span class="scope">[<a href="<?php echo $this->url(array('module' => $module,'controller' => 'terminology','action' => 'landuse','id' => $this->landusevalue),Null, true);?>" title="View scope notes for <?php echo $this->landvalue;?>">scope notes</a>]</span><br />
<?php endif;?>
<?php if(!is_null($this->landuse)):?>
Specific landuse: <span property="pas:specficLanduse"><?php echo $this->escape($this->landuse);?></span> <span class="scope">[<a href="<?php echo $this->url(array('module' => $module,'controller'=>'terminology','action'=> 'landuse','id' => $this->landusecode),null,true);?>" title="Read scope note for <?php echo $this->landuse;?>">scope notes</a>]</span><br/>
<?php endif;?>
</p>
