<?php
$this->headTitle("Welcome to the Scheme's database");
$this->metaBase('This database is maintained by the Scheme and contains records of archaeological objects found by the public in England and Wales. It is first and foremost a research resource, but it is also a record of our rural archaeological record',
'archaeological database',
 'archaeology,database,England,Wales,discovery,archaeological'
        );
?>
<?php
echo $this->googleDynamicMap();
$this->inlineScript()->appendFile('http://maps.stamen.com/js/tile.stamen.js',$type = 'text/javascript');
?>

<?php $this->inlineScript()->captureStart();?>
$(document).ready(function() {

<?php
	$user = new Pas_User_Details();
	$person = $user->getPerson()->role;
	$allowed = array('admin', 'fa', 'flos', 'research', 'treasure');
	if(in_array($person, $allowed)) {
		$maxzoom = 18;
		$minzoom = 1;
	} else {
		$maxzoom = 11;
		$minzoom = 1;
	}
?>

	var max = <?php echo $maxzoom;?>;
	var min = <?php echo $minzoom;?>;
	var osmMapType = new google.maps.ImageMapType({
        getTileUrl: function (coord, zoom) {
            return "http://tile.openstreetmap.org/" +
                zoom + "/" + coord.x + "/" + coord.y + ".png";

        },
        tileSize: new google.maps.Size(256, 256),
        isPng: true,
        alt: "OpenStreetMap layer",
        name: "OSM",
        maxZoom: max
    });



	var myOptions = {
          center: new google.maps.LatLng(54,-2),
          zoom: 6,
		  mapTypeControlOptions: {
          mapTypeIds: [
          google.maps.MapTypeId.TERRAIN,
          google.maps.MapTypeId.SATELLITE,
          'OSM',
          'Watercolor',
          'Toner'
          ]
    	  },
    	  mapTypeControl: true,
    	  style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR,
          scaleControl: true,
    	  zoomControl: true,
          mapTypeId: 'OSM',
          scrollwheel: false,
          maxZoom: max,
          minZoom: min
        };
        var map = new google.maps.Map(document.getElementById("mapIntro"),
            myOptions);
            map.mapTypes.set('OSM',osmMapType);
            map.setTilt(45);

       google.maps.event.trigger(map, 'resize');
       map.setZoom( map.getZoom() );
       map.mapTypes.set("Watercolor", new google.maps.StamenMapType("watercolor"));
       map.mapTypes.set("Toner", new google.maps.StamenMapType("toner"));
       	var myTitle = document.createElement('h1');
		myTitle.style.color = '#444444';
		myTitle.style.font = "10px sans-serif";
		myTitle.innerHTML = '<p>OSM &copy; <a href="http://www.openstreetmap.org/">OpenStreetMap<\/a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA<\/a> | Google tiles &copy; Google | Watercolor &amp; Toner: Stamen Design, licensed CC BY 3.0</p>';

		var myTextDiv = document.createElement('div');
		myTextDiv.appendChild(myTitle);

		map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(myTextDiv);

	<?php
	$request = Zend_Controller_Front::getInstance()->getRequest();
	$params = array('module' => 'database', 'controller' => 'ajax', 'action' => 'mapdata2');
	$params['note'] = 1;
	$params['show'] = 75;
	$url = $this->serverUrl() . $this->url($params,'default',true);
	       ?>
	var infowindow = new google.maps.InfoWindow();


    jQuery.get("<?php echo $url;?>", {}, function(data) {

    jQuery(data).find("marker").each(function() {
        var markerXML = jQuery(this);
        var latlng = new google.maps.LatLng(
            parseFloat(markerXML.attr("lat")),
            parseFloat(markerXML.attr("lng"))
        );
        var title = markerXML.attr("title");
        var marker = new google.maps.Marker({
        	position: latlng,
        	map: map,
        	title: title,
        	icon: '<?php echo $this->serverUrl();?>/images/logos/museum_archeological.png',
        	});
        markerInfoWindow(marker, markerXML.attr("content"));
    });
	});


	function markerInfoWindow(marker, information){
	     google.maps.event.addListener(marker, 'click',
	    function() {
	        infowindow.close();
	        infowindow.setContent(information);
	        infowindow.setPosition(marker.getPosition());
	        infowindow.open(map, marker);
	    });
	}
	var center;

	function calculateCenter() {
	  center = map.getCenter();
	}
	google.maps.event.addDomListener(map, 'idle', function() {
	  calculateCenter();
	});
	google.maps.event.addDomListener(window, 'resize', function() {
	  map.setCenter(center);
	});

});
<?php $this->inlineScript()->captureEnd();?>
<h2>Welcome to the Scheme's database</h2>

<div class="row-fluid">
	<div id="mapIntro" >
	</div>
</div>

<div class="row-fluid">
	<div class="span4">
	<?php
	echo $this->form;
	?>
	</div>
	<div class="span8">
	<?php echo $this->StatisticsDatabase();?>
	</div>
</div>

<div class="row-fluid">
<?php foreach($this->contents as $c) {
echo $c['body'];
}
?>
</div>
