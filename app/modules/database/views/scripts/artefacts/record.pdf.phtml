<?php
class PDF extends Pas_FPDF
{

//Page header
function Header()
{
    $this->Image('/home/beowulf/public_html/images/logos/pas.gif',10,8,33);
    //Arial bold 15
    $this->SetFont('Arial','',11);
    //Move to the right
    $this->Cell(50);
    //Title
   $this->Cell(10,10,'Report generated by the Portable Antiquities Scheme\'s database');
    //Line break
    $this->Ln(20);
}

//Page footer
function Footer()
{
    //Position at 1.5 cm from bottom
    $this->SetY(-15);
    //Arial italic 8
    $this->SetFont('Arial','I',8);
    //Page number
	$this->Cell(0,10,'This record does not constitute an authentication of the object, it is an opinion only. E&OE. The Scheme cannot provide valuations.');
    $this->Cell(0,10,'Page '.$this->PageNo().'/{nb}',0,0,'C');
}
}
$url = 'http://'.$_SERVER['SERVER_NAME'].'/database/artefacts/record/id/'.$this->record['0']['id'];

$title =  strip_tags('Report for : '. $this->partial('partials/database/recordh2section.phtml',$this->record['0']). 'Printed @ '.$this->niceshortdate(Zend_Date::now()->toString('yyyy-MM-dd')));
$description = $this->partial('partials/pdf/description.phtml',$this->record['0']);
$description = strip_tags(htmlspecialchars_decode($description));

$pdf=new PDF();
$pdf->AliasNbPages();
$pdf->AddPage();
$pdf->SetFont('Arial','',11);
$pdf->MultiCell(0,4,$title);
$pdf->Ln(2);

$pdf->MultiCell(0,4,'Permanent stable URL for this find: '.$url,0,'L');
$pdf->Ln(2);

$pdf->MultiCell(0,4,$description);

if(isset($this->record['0']['f'])) {
$root = '/home/beowulf/public_html/';
$dir = $this->record['0']['imagedir'].'display/';
$imagefile = $this->record['0']['f'];
$ext = '.jpg';
$name = substr($imagefile, 0, strrpos($imagefile, '.'));
$fullpath = $root.$dir.$name.$ext;
$lowercasepath = $root.$dir.strtolower($name).$ext;

if(file_exists($fullpath)) {
$pdf->Ln(8);
$x = $pdf->GetX() + 80;
$y = $pdf->GetY();
list($w, $h) = getimagesize($fullpath);
$pdf->Image($fullpath,$x,$y,0,0);
} else if(file_exists($lowercasepath)) {
$pdf->Ln(8);
$x = $pdf->GetX() + 80;
$y = $pdf->GetY();
list($w, $h) = getimagesize($lowercasepath);

$pdf->Image($lowercasepath,$x,$y,0,0);

}
}
$objectarray = array('coin','COIN','Coin');
if (in_Array($this->record['0']['objecttype'],$objectarray)) {

if (($this->record['0']['broadperiod']) == 'IRON AGE' ) {
$numismatics = $this->partial('partials/pdf/ironagedata.phtml', $this->record['0']);
}

if (($this->record['0']['broadperiod']) == 'BYZANTINE' ) {
$numismatics = $this->partial('partials/pdf/byzantinedata.phtml', $this->record['0']);
}

if (($this->record['0']['broadperiod']) == 'ROMAN') {
$numismatics = $this->partial('partials/pdf/romandata.phtml', $this->record['0']) ;
}

if (($this->record['0']['broadperiod']) == 'MEDIEVAL' ) {
$numismatics = $this->partial('partials/pdf/meddata.phtml', $this->record['0']);
}

if (($this->record['0']['broadperiod']) == 'EARLY MEDIEVAL'){
$numsimatics =  $this->partial('partials/pdf/earlymeddata.phtml', $this->record['0']);
}

if (($this->record['0']['broadperiod']) == 'POST MEDIEVAL') {
$numismatics =  $this->partial('partials/pdf/postmeddata.phtml', $this->record['0']);
}
if (($this->record['0']['broadperiod']) == 'GREEK AND ROMAN PROVINCIAL') {
$numismatics =  $this->partial('partials/pdf/greekdata.phtml', $this->record['0']);
}
}

if(isset($numismatics)) {
$numismatics = strip_tags(htmlspecialchars_decode($numismatics));
$pdf->MultiCell(0,4,$numismatics);
}


$personal = strip_tags($this->partial('partials/pdf/personal.phtml', $this->record['0']));
if(isset($this->record['0']['county'])) {
$auth = Zend_Registry::get('auth');
if($auth->hasIdentity())
{
$user = $auth->getIdentity();
{
$allowed = array('fa','admin','flos','hero','research');
if(in_array($user->role,$allowed))
{
$findspot = $this->partialLoop('partials/pdf/findspotpdf.phtml', $this->record);
$findspot = strip_tags($findspot);
$pdf->MultiCell(0,4,$findspot);

} else {
$findspot = strip_tags($this->partialLoop('partials/pdf/unauthorisedfindspotpdf.phtml', $this->record));
$pdf->MultiCell(0,4,$findspot);

}
}
}else {
$findspot = strip_tags($this->partialLoop('partials/pdf/unauthorisedfindspotpdf.phtml', $this->record));
$pdf->MultiCell(0,4,$findspot);

}
}

$pdf->MultiCell(0,4,$personal);
$refs = new Publications;
$refs = $refs->getReferences($this->record['0']['id']);
if(count($refs)) {
$pdf->MultiCell(0,4,'References cited');
$pdf->Ln(2);
$references = $this->partialLoop('partials/database/harvardbook.phtml', $refs);
$references = strip_tags($references);
$pdf->MultiCell(0,4,$references);
}

$url = 'http://'.$_SERVER['SERVER_NAME'].'/database/artefacts/record/id/'.$this->record['0']['id'];
$qr = 'http://chart.apis.google.com/chart?chs=50x50&cht=qr&chl='.$url;


$dateTime = Zend_Date::now()->toString('yyyy-MM-dd HH:mm:ss');
$version = Zend_Version::VERSION;
$image = 'http://maps.google.com/maps/api/staticmap?center=52.155681,1.21617&zoom=14&size=640x300&maptype=terrain&markers=color:green|label:G|52.155681,1.21617&sensor=false';
$pdf->Image($qr,180,10,'10','10','PNG');
$pdf->SetAuthor($this->record['0']['fullname'] ,true);
$pdf->SetTitle('Archaeological object report for '.$this->record['0']['old_findID'] ,true);
$pdf->SetSubject('archaeology',true);
$pdf->SetCreator('Generated by Dan\'s magic and Zend framework '.$version,true);
$pdf->SetCompression(true);
$pdf->Output($this->record['0']['old_findID'].'.pdf','D');
